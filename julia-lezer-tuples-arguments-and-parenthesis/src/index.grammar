@precedence {
}

@top SourceFile { expression }

function-name {
  parens<Call> |
  parens<Tuple> |
  parens<InlineBlock> |
  parens<Identifier>
}

expression {
  kw<"function"> function-name |
  primary-expression
}

primary-expression {
  parens<Tuple> |
  parens<InlineBlock> |
  parens<Identifier> |
  parens<Call> |
  parens<Number>
}

Call {
  primary-expression
  ArgumentList
}

parens<--expression> {
  --expression |
  "(" parens<--expression> ")"
}

oneparens<--expression> {
  "(" --expression ")"
}

InlineBlock {
  "("
  expression (";" expression ","?)+ ";"?
  ")"
} 

ArgumentList[@name=Tuple] {
  "("
  (tuple-section? Parameters*)?
  ")"
}

Tuple {
  "("
  (expression "," tuple-section?)?
  Parameters*
  ")"
}

Parameters {
  ";" tuple-section?
}
tuple-section {
    expression ("," expression)* ","?
}

Identifier { identifier }
kw<term> { @specialize[@name={term},group="keyword"]<identifier, term> }

@skip { whitespace | Comment }

@tokens {
  identifierChar { std.asciiLetter | $[_$\u{a1}-\u{10ffff}] }

  word { identifierChar (identifierChar | std.digit)* }

  identifier { word }

  Number { std.digit+ }


  whitespace {
    " " | "\t" | "\n"
  }
  Comment {
    "#" ![\n]*
  }
  @precedence {
  }
}
