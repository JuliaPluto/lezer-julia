@precedence {
}

@top SourceFile { expression }

function-name {
  Call |
  EmptyTuple |
  Inline |
  Identifier |
  parens<function-name>
}

expression {
  kw<"function"> (function-name) |
  primary-expression
}

primary-expression {
  Identifier |
  Call |
  Number |
  EmptyTuple |
  Inline |
  parens<primary-expression>
}

Call {
  primary-expression
  ArgumentList
}

parens<--expression> {
  "(" --expression ~parens-or-inline ")"
}

Inline {
  "(" Tuple { expression ("," tuple-section? | Parameters) } Parameters* ")" |
  "(" Parameters+ ")" 
}

ArgumentList[@name=Tuple] {
  Inline | parens<expression> | EmptyTuple
}

EmptyTuple { "(" ")" }

Parameters {
  ";" tuple-section?
}
tuple-section {
    expression ("," expression)* ","?
}

Identifier { identifier }
kw<term> { @specialize[@name={term},group="keyword"]<identifier, term> }

@skip { whitespace | Comment }

@tokens {
  identifierChar { std.asciiLetter | $[_$\u{a1}-\u{10ffff}] }

  word { identifierChar (identifierChar | std.digit)* }

  identifier { word }

  Number { std.digit+ }


  whitespace {
    " " | "\t" | "\n"
  }
  Comment {
    "#" ![\n]*
  }
  @precedence {
  }
}
